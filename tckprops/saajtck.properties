
##########################################################################
#The following properties must be set prior to running the SAAJ TCK tests.
#
# webserver.home
# webserver.host
# webserver.port
# local.classes
# j2ee.home.ri		(NEEDED ONLY IF BUILDING TESTS)
#
##########################################################################
webserver.home=${env.JWSDP_HOME}
webserver.host=localhost
webserver.port=8080
webapp.dir=${webserver.home}/webapps

## two properties to be set for running TCK from saajri
jwsdp.home=${env.JWSDP_HOME}
saajri.home=${env.SAAJRI_HOME}

# Set your local timezone. For valid values, consult your Operating System
# documentation.
tz=US/Eastern

# The jars/classes needed for building/packaging. The settings are for
# the Sun J2EE Reference Implementation. (NEEDED ONLY IF BUILDING TESTS)
j2ee.home.ri=${env.J2EE_HOME}
j2ee.classes.ri=${j2ee.home.ri}/lib/j2ee.jar
java.endorsed.dirs=${j2ee.home.ri}/lib/endorsed

# The jars/classes for the TS harness/javatest and the test classes
harness.classes=${ts.home}/lib/tsharness.jar:${ts.home}/lib/apiCheck.jar:${ts.home}/lib/javatest.jar:${ts.home}/lib/saajtck.jar:${ts.home}/classes:${ts.home}/tools/ant/lib/ant.jar

# The classpath should include the J2EE server jar, the TS harness/javatest
# jars tsharness.jar, parser.jar and javatest.jar, the test classes and any
# additional RI specific jars/classes defined in (local.classes).

#property set for running tck from SAAJ RI
local.classes=${jwsdp.home}/jaxp/lib/jaxp-api.jar:${jwsdp.home}/jaxp/lib/endorsed/xercesImpl.jar:${jwsdp.home}/jaxp/lib/endorsed/xsltc.jar:${jwsdp.home}/jaxp/lib/endorsed/xalan.jar:${jwsdp.home}/jaxp/lib/endorsed/sax.jar:${jwsdp.home}/jaxp/lib/endorsed/dom.jar:${saajri.home}/dist/lib/saaj-impl.jar:${saajri.home}/dist/lib/saaj-api.jar:${jwsdp.home}/jwsdp-shared/lib/mail.jar:${jwsdp.home}/jwsdp-shared/lib/activation.jar:${jwsdp.home}/jwsdp-shared/lib/commons-logging.jar:${jwsdp.home}/common/lib/servlet-api.jar:${saajri.home}/dist/lib/jax-qname.jar:${saajri.home}/lib/servlet.jar

ts.classpath=${j2ee.classes.ri}:${harness.classes}:${local.classes}

#build level
#1: compile only
#2: compile and build component archives (e.g., jar's, war's)
build.level=2

deliverable.class=com.sun.ts.lib.deliverable.tck.TCKDeliverable
